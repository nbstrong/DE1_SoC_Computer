$date
	Tue Nov 23 02:09:18 2021
$end
$version
	ModelSim Version 10.5b
$end
$timescale
	1ps
$end

$scope module tb $end
$var wire 1 ! CLOCK_50 $end
$var wire 1 " CLOCK2_50 $end
$var wire 1 # CLOCK3_50 $end
$var wire 1 $ CLOCK4_50 $end
$var wire 1 % ADC_CS_N $end
$var wire 1 & ADC_DIN $end
$var wire 1 ' ADC_DOUT $end
$var wire 1 ( ADC_SCLK $end
$var wire 1 ) AUD_ADCDAT $end
$var wire 1 * AUD_ADCLRCK $end
$var wire 1 + AUD_BCLK $end
$var wire 1 , AUD_DACDAT $end
$var wire 1 - AUD_DACLRCK $end
$var wire 1 . AUD_XCK $end
$var wire 1 / DRAM_ADDR [12] $end
$var wire 1 0 DRAM_ADDR [11] $end
$var wire 1 1 DRAM_ADDR [10] $end
$var wire 1 2 DRAM_ADDR [9] $end
$var wire 1 3 DRAM_ADDR [8] $end
$var wire 1 4 DRAM_ADDR [7] $end
$var wire 1 5 DRAM_ADDR [6] $end
$var wire 1 6 DRAM_ADDR [5] $end
$var wire 1 7 DRAM_ADDR [4] $end
$var wire 1 8 DRAM_ADDR [3] $end
$var wire 1 9 DRAM_ADDR [2] $end
$var wire 1 : DRAM_ADDR [1] $end
$var wire 1 ; DRAM_ADDR [0] $end
$var wire 1 < DRAM_BA [1] $end
$var wire 1 = DRAM_BA [0] $end
$var wire 1 > DRAM_CAS_N $end
$var wire 1 ? DRAM_CKE $end
$var wire 1 @ DRAM_CLK $end
$var wire 1 A DRAM_CS_N $end
$var wire 1 B DRAM_DQ [15] $end
$var wire 1 C DRAM_DQ [14] $end
$var wire 1 D DRAM_DQ [13] $end
$var wire 1 E DRAM_DQ [12] $end
$var wire 1 F DRAM_DQ [11] $end
$var wire 1 G DRAM_DQ [10] $end
$var wire 1 H DRAM_DQ [9] $end
$var wire 1 I DRAM_DQ [8] $end
$var wire 1 J DRAM_DQ [7] $end
$var wire 1 K DRAM_DQ [6] $end
$var wire 1 L DRAM_DQ [5] $end
$var wire 1 M DRAM_DQ [4] $end
$var wire 1 N DRAM_DQ [3] $end
$var wire 1 O DRAM_DQ [2] $end
$var wire 1 P DRAM_DQ [1] $end
$var wire 1 Q DRAM_DQ [0] $end
$var wire 1 R DRAM_LDQM $end
$var wire 1 S DRAM_RAS_N $end
$var wire 1 T DRAM_UDQM $end
$var wire 1 U DRAM_WE_N $end
$var wire 1 V FPGA_I2C_SCLK $end
$var wire 1 W FPGA_I2C_SDAT $end
$var wire 1 X NAND_DQ [7] $end
$var wire 1 Y NAND_DQ [6] $end
$var wire 1 Z NAND_DQ [5] $end
$var wire 1 [ NAND_DQ [4] $end
$var wire 1 \ NAND_DQ [3] $end
$var wire 1 ] NAND_DQ [2] $end
$var wire 1 ^ NAND_DQ [1] $end
$var wire 1 _ NAND_DQ [0] $end
$var wire 1 ` NAND_NWP $end
$var wire 1 a NAND_NWE $end
$var wire 1 b NAND_ALE $end
$var wire 1 c NAND_CLE $end
$var wire 1 d NAND_NCE $end
$var wire 1 e NAND_NRE $end
$var wire 1 f NAND_RNB $end
$var wire 1 g GPIO_0 [35] $end
$var wire 1 h GPIO_0 [34] $end
$var wire 1 i GPIO_0 [33] $end
$var wire 1 j GPIO_0 [32] $end
$var wire 1 k GPIO_0 [31] $end
$var wire 1 l GPIO_0 [30] $end
$var wire 1 m GPIO_0 [29] $end
$var wire 1 n GPIO_0 [28] $end
$var wire 1 o GPIO_0 [27] $end
$var wire 1 p GPIO_0 [26] $end
$var wire 1 q GPIO_0 [25] $end
$var wire 1 r GPIO_0 [24] $end
$var wire 1 s GPIO_0 [23] $end
$var wire 1 t GPIO_0 [22] $end
$var wire 1 u GPIO_0 [21] $end
$var wire 1 v GPIO_0 [20] $end
$var wire 1 w GPIO_0 [19] $end
$var wire 1 x GPIO_0 [18] $end
$var wire 1 y GPIO_0 [17] $end
$var wire 1 z GPIO_0 [16] $end
$var wire 1 { GPIO_0 [15] $end
$var wire 1 | GPIO_1 [35] $end
$var wire 1 } GPIO_1 [34] $end
$var wire 1 ~ GPIO_1 [33] $end
$var wire 1 !! GPIO_1 [32] $end
$var wire 1 "! GPIO_1 [31] $end
$var wire 1 #! GPIO_1 [30] $end
$var wire 1 $! GPIO_1 [29] $end
$var wire 1 %! GPIO_1 [28] $end
$var wire 1 &! GPIO_1 [27] $end
$var wire 1 '! GPIO_1 [26] $end
$var wire 1 (! GPIO_1 [25] $end
$var wire 1 )! GPIO_1 [24] $end
$var wire 1 *! GPIO_1 [23] $end
$var wire 1 +! GPIO_1 [22] $end
$var wire 1 ,! GPIO_1 [21] $end
$var wire 1 -! GPIO_1 [20] $end
$var wire 1 .! GPIO_1 [19] $end
$var wire 1 /! GPIO_1 [18] $end
$var wire 1 0! GPIO_1 [17] $end
$var wire 1 1! GPIO_1 [16] $end
$var wire 1 2! GPIO_1 [15] $end
$var wire 1 3! GPIO_1 [14] $end
$var wire 1 4! GPIO_1 [13] $end
$var wire 1 5! GPIO_1 [12] $end
$var wire 1 6! GPIO_1 [11] $end
$var wire 1 7! GPIO_1 [10] $end
$var wire 1 8! GPIO_1 [9] $end
$var wire 1 9! GPIO_1 [8] $end
$var wire 1 :! GPIO_1 [7] $end
$var wire 1 ;! GPIO_1 [6] $end
$var wire 1 <! GPIO_1 [5] $end
$var wire 1 =! GPIO_1 [4] $end
$var wire 1 >! GPIO_1 [3] $end
$var wire 1 ?! GPIO_1 [2] $end
$var wire 1 @! GPIO_1 [1] $end
$var wire 1 A! GPIO_1 [0] $end
$var wire 1 B! HEX0 [6] $end
$var wire 1 C! HEX0 [5] $end
$var wire 1 D! HEX0 [4] $end
$var wire 1 E! HEX0 [3] $end
$var wire 1 F! HEX0 [2] $end
$var wire 1 G! HEX0 [1] $end
$var wire 1 H! HEX0 [0] $end
$var wire 1 I! HEX1 [6] $end
$var wire 1 J! HEX1 [5] $end
$var wire 1 K! HEX1 [4] $end
$var wire 1 L! HEX1 [3] $end
$var wire 1 M! HEX1 [2] $end
$var wire 1 N! HEX1 [1] $end
$var wire 1 O! HEX1 [0] $end
$var wire 1 P! HEX2 [6] $end
$var wire 1 Q! HEX2 [5] $end
$var wire 1 R! HEX2 [4] $end
$var wire 1 S! HEX2 [3] $end
$var wire 1 T! HEX2 [2] $end
$var wire 1 U! HEX2 [1] $end
$var wire 1 V! HEX2 [0] $end
$var wire 1 W! HEX3 [6] $end
$var wire 1 X! HEX3 [5] $end
$var wire 1 Y! HEX3 [4] $end
$var wire 1 Z! HEX3 [3] $end
$var wire 1 [! HEX3 [2] $end
$var wire 1 \! HEX3 [1] $end
$var wire 1 ]! HEX3 [0] $end
$var wire 1 ^! HEX4 [6] $end
$var wire 1 _! HEX4 [5] $end
$var wire 1 `! HEX4 [4] $end
$var wire 1 a! HEX4 [3] $end
$var wire 1 b! HEX4 [2] $end
$var wire 1 c! HEX4 [1] $end
$var wire 1 d! HEX4 [0] $end
$var wire 1 e! HEX5 [6] $end
$var wire 1 f! HEX5 [5] $end
$var wire 1 g! HEX5 [4] $end
$var wire 1 h! HEX5 [3] $end
$var wire 1 i! HEX5 [2] $end
$var wire 1 j! HEX5 [1] $end
$var wire 1 k! HEX5 [0] $end
$var wire 1 l! IRDA_RXD $end
$var wire 1 m! IRDA_TXD $end
$var wire 1 n! KEY [3] $end
$var wire 1 o! KEY [2] $end
$var wire 1 p! KEY [1] $end
$var wire 1 q! KEY [0] $end
$var wire 1 r! LEDR [9] $end
$var wire 1 s! LEDR [8] $end
$var wire 1 t! LEDR [7] $end
$var wire 1 u! LEDR [6] $end
$var wire 1 v! LEDR [5] $end
$var wire 1 w! LEDR [4] $end
$var wire 1 x! LEDR [3] $end
$var wire 1 y! LEDR [2] $end
$var wire 1 z! LEDR [1] $end
$var wire 1 {! LEDR [0] $end
$var wire 1 |! PS2_CLK $end
$var wire 1 }! PS2_DAT $end
$var wire 1 ~! PS2_CLK2 $end
$var wire 1 !" PS2_DAT2 $end
$var wire 1 "" SW [9] $end
$var wire 1 #" SW [8] $end
$var wire 1 $" SW [7] $end
$var wire 1 %" SW [6] $end
$var wire 1 &" SW [5] $end
$var wire 1 '" SW [4] $end
$var wire 1 (" SW [3] $end
$var wire 1 )" SW [2] $end
$var wire 1 *" SW [1] $end
$var wire 1 +" SW [0] $end
$var wire 1 ," TD_CLK27 $end
$var wire 1 -" TD_DATA [7] $end
$var wire 1 ." TD_DATA [6] $end
$var wire 1 /" TD_DATA [5] $end
$var wire 1 0" TD_DATA [4] $end
$var wire 1 1" TD_DATA [3] $end
$var wire 1 2" TD_DATA [2] $end
$var wire 1 3" TD_DATA [1] $end
$var wire 1 4" TD_DATA [0] $end
$var wire 1 5" TD_HS $end
$var wire 1 6" TD_RESET_N $end
$var wire 1 7" TD_VS $end
$var wire 1 8" VGA_B [7] $end
$var wire 1 9" VGA_B [6] $end
$var wire 1 :" VGA_B [5] $end
$var wire 1 ;" VGA_B [4] $end
$var wire 1 <" VGA_B [3] $end
$var wire 1 =" VGA_B [2] $end
$var wire 1 >" VGA_B [1] $end
$var wire 1 ?" VGA_B [0] $end
$var wire 1 @" VGA_BLANK_N $end
$var wire 1 A" VGA_CLK $end
$var wire 1 B" VGA_G [7] $end
$var wire 1 C" VGA_G [6] $end
$var wire 1 D" VGA_G [5] $end
$var wire 1 E" VGA_G [4] $end
$var wire 1 F" VGA_G [3] $end
$var wire 1 G" VGA_G [2] $end
$var wire 1 H" VGA_G [1] $end
$var wire 1 I" VGA_G [0] $end
$var wire 1 J" VGA_HS $end
$var wire 1 K" VGA_R [7] $end
$var wire 1 L" VGA_R [6] $end
$var wire 1 M" VGA_R [5] $end
$var wire 1 N" VGA_R [4] $end
$var wire 1 O" VGA_R [3] $end
$var wire 1 P" VGA_R [2] $end
$var wire 1 Q" VGA_R [1] $end
$var wire 1 R" VGA_R [0] $end
$var wire 1 S" VGA_SYNC_N $end
$var wire 1 T" VGA_VS $end
$var wire 1 U" HPS_DDR3_ADDR [14] $end
$var wire 1 V" HPS_DDR3_ADDR [13] $end
$var wire 1 W" HPS_DDR3_ADDR [12] $end
$var wire 1 X" HPS_DDR3_ADDR [11] $end
$var wire 1 Y" HPS_DDR3_ADDR [10] $end
$var wire 1 Z" HPS_DDR3_ADDR [9] $end
$var wire 1 [" HPS_DDR3_ADDR [8] $end
$var wire 1 \" HPS_DDR3_ADDR [7] $end
$var wire 1 ]" HPS_DDR3_ADDR [6] $end
$var wire 1 ^" HPS_DDR3_ADDR [5] $end
$var wire 1 _" HPS_DDR3_ADDR [4] $end
$var wire 1 `" HPS_DDR3_ADDR [3] $end
$var wire 1 a" HPS_DDR3_ADDR [2] $end
$var wire 1 b" HPS_DDR3_ADDR [1] $end
$var wire 1 c" HPS_DDR3_ADDR [0] $end
$var wire 1 d" HPS_DDR3_BA [2] $end
$var wire 1 e" HPS_DDR3_BA [1] $end
$var wire 1 f" HPS_DDR3_BA [0] $end
$var wire 1 g" HPS_DDR3_CAS_N $end
$var wire 1 h" HPS_DDR3_CKE $end
$var wire 1 i" HPS_DDR3_CK_N $end
$var wire 1 j" HPS_DDR3_CK_P $end
$var wire 1 k" HPS_DDR3_CS_N $end
$var wire 1 l" HPS_DDR3_DM [3] $end
$var wire 1 m" HPS_DDR3_DM [2] $end
$var wire 1 n" HPS_DDR3_DM [1] $end
$var wire 1 o" HPS_DDR3_DM [0] $end
$var wire 1 p" HPS_DDR3_DQ [31] $end
$var wire 1 q" HPS_DDR3_DQ [30] $end
$var wire 1 r" HPS_DDR3_DQ [29] $end
$var wire 1 s" HPS_DDR3_DQ [28] $end
$var wire 1 t" HPS_DDR3_DQ [27] $end
$var wire 1 u" HPS_DDR3_DQ [26] $end
$var wire 1 v" HPS_DDR3_DQ [25] $end
$var wire 1 w" HPS_DDR3_DQ [24] $end
$var wire 1 x" HPS_DDR3_DQ [23] $end
$var wire 1 y" HPS_DDR3_DQ [22] $end
$var wire 1 z" HPS_DDR3_DQ [21] $end
$var wire 1 {" HPS_DDR3_DQ [20] $end
$var wire 1 |" HPS_DDR3_DQ [19] $end
$var wire 1 }" HPS_DDR3_DQ [18] $end
$var wire 1 ~" HPS_DDR3_DQ [17] $end
$var wire 1 !# HPS_DDR3_DQ [16] $end
$var wire 1 "# HPS_DDR3_DQ [15] $end
$var wire 1 ## HPS_DDR3_DQ [14] $end
$var wire 1 $# HPS_DDR3_DQ [13] $end
$var wire 1 %# HPS_DDR3_DQ [12] $end
$var wire 1 &# HPS_DDR3_DQ [11] $end
$var wire 1 '# HPS_DDR3_DQ [10] $end
$var wire 1 (# HPS_DDR3_DQ [9] $end
$var wire 1 )# HPS_DDR3_DQ [8] $end
$var wire 1 *# HPS_DDR3_DQ [7] $end
$var wire 1 +# HPS_DDR3_DQ [6] $end
$var wire 1 ,# HPS_DDR3_DQ [5] $end
$var wire 1 -# HPS_DDR3_DQ [4] $end
$var wire 1 .# HPS_DDR3_DQ [3] $end
$var wire 1 /# HPS_DDR3_DQ [2] $end
$var wire 1 0# HPS_DDR3_DQ [1] $end
$var wire 1 1# HPS_DDR3_DQ [0] $end
$var wire 1 2# HPS_DDR3_DQS_N [3] $end
$var wire 1 3# HPS_DDR3_DQS_N [2] $end
$var wire 1 4# HPS_DDR3_DQS_N [1] $end
$var wire 1 5# HPS_DDR3_DQS_N [0] $end
$var wire 1 6# HPS_DDR3_DQS_P [3] $end
$var wire 1 7# HPS_DDR3_DQS_P [2] $end
$var wire 1 8# HPS_DDR3_DQS_P [1] $end
$var wire 1 9# HPS_DDR3_DQS_P [0] $end
$var wire 1 :# HPS_DDR3_ODT $end
$var wire 1 ;# HPS_DDR3_RAS_N $end
$var wire 1 <# HPS_DDR3_RESET_N $end
$var wire 1 =# HPS_DDR3_RZQ $end
$var wire 1 ># HPS_DDR3_WE_N $end
$var wire 1 ?# HPS_ENET_GTX_CLK $end
$var wire 1 @# HPS_ENET_INT_N $end
$var wire 1 A# HPS_ENET_MDC $end
$var wire 1 B# HPS_ENET_MDIO $end
$var wire 1 C# HPS_ENET_RX_CLK $end
$var wire 1 D# HPS_ENET_RX_DATA [3] $end
$var wire 1 E# HPS_ENET_RX_DATA [2] $end
$var wire 1 F# HPS_ENET_RX_DATA [1] $end
$var wire 1 G# HPS_ENET_RX_DATA [0] $end
$var wire 1 H# HPS_ENET_RX_DV $end
$var wire 1 I# HPS_ENET_TX_DATA [3] $end
$var wire 1 J# HPS_ENET_TX_DATA [2] $end
$var wire 1 K# HPS_ENET_TX_DATA [1] $end
$var wire 1 L# HPS_ENET_TX_DATA [0] $end
$var wire 1 M# HPS_ENET_TX_EN $end
$var wire 1 N# HPS_FLASH_DATA [3] $end
$var wire 1 O# HPS_FLASH_DATA [2] $end
$var wire 1 P# HPS_FLASH_DATA [1] $end
$var wire 1 Q# HPS_FLASH_DATA [0] $end
$var wire 1 R# HPS_FLASH_DCLK $end
$var wire 1 S# HPS_FLASH_NCSO $end
$var wire 1 T# HPS_GSENSOR_INT $end
$var wire 1 U# HPS_GPIO [1] $end
$var wire 1 V# HPS_GPIO [0] $end
$var wire 1 W# HPS_I2C_CONTROL $end
$var wire 1 X# HPS_I2C1_SCLK $end
$var wire 1 Y# HPS_I2C1_SDAT $end
$var wire 1 Z# HPS_I2C2_SCLK $end
$var wire 1 [# HPS_I2C2_SDAT $end
$var wire 1 \# HPS_KEY $end
$var wire 1 ]# HPS_LED $end
$var wire 1 ^# HPS_SD_CLK $end
$var wire 1 _# HPS_SD_CMD $end
$var wire 1 `# HPS_SD_DATA [3] $end
$var wire 1 a# HPS_SD_DATA [2] $end
$var wire 1 b# HPS_SD_DATA [1] $end
$var wire 1 c# HPS_SD_DATA [0] $end
$var wire 1 d# HPS_SPIM_CLK $end
$var wire 1 e# HPS_SPIM_MISO $end
$var wire 1 f# HPS_SPIM_MOSI $end
$var wire 1 g# HPS_SPIM_SS $end
$var wire 1 h# HPS_UART_RX $end
$var wire 1 i# HPS_UART_TX $end
$var wire 1 j# HPS_CONV_USB_N $end
$var wire 1 k# HPS_USB_CLKOUT $end
$var wire 1 l# HPS_USB_DATA [7] $end
$var wire 1 m# HPS_USB_DATA [6] $end
$var wire 1 n# HPS_USB_DATA [5] $end
$var wire 1 o# HPS_USB_DATA [4] $end
$var wire 1 p# HPS_USB_DATA [3] $end
$var wire 1 q# HPS_USB_DATA [2] $end
$var wire 1 r# HPS_USB_DATA [1] $end
$var wire 1 s# HPS_USB_DATA [0] $end
$var wire 1 t# HPS_USB_DIR $end
$var wire 1 u# HPS_USB_NXT $end
$var wire 1 v# HPS_USB_STP $end
$var reg 1 w# clk $end
$var reg 1 x# rst $end
$var reg 1 y# rd $end
$var reg 1 z# wr $end
$var reg 1 {# cs $end
$var reg 1 |# doneInt $end
$var reg 2 }# addr [1:0] $end
$var reg 4 ~# be [3:0] $end
$var reg 32 !$ wrData [31:0] $end
$var reg 32 "$ rdData [31:0] $end

$scope task reset_system $end
$var reg 1 #$ active_high $end
$upscope $end

$scope task write_command $end
$var reg 8 $$ wrdata [7:0] $end
$upscope $end

$scope task read_command $end
$upscope $end

$scope task write_data $end
$var reg 32 %$ wrdata [31:0] $end
$upscope $end

$scope task read_data $end
$upscope $end

$scope task read_status $end
$upscope $end

$scope task release_signals $end
$upscope $end

$scope module dut $end
$var wire 1 ! CLOCK_50 $end
$var wire 1 " CLOCK2_50 $end
$var wire 1 # CLOCK3_50 $end
$var wire 1 $ CLOCK4_50 $end
$var wire 1 % ADC_CS_N $end
$var wire 1 & ADC_DIN $end
$var wire 1 ' ADC_DOUT $end
$var wire 1 ( ADC_SCLK $end
$var wire 1 ) AUD_ADCDAT $end
$var wire 1 * AUD_ADCLRCK $end
$var wire 1 + AUD_BCLK $end
$var wire 1 , AUD_DACDAT $end
$var wire 1 - AUD_DACLRCK $end
$var wire 1 . AUD_XCK $end
$var wire 1 / DRAM_ADDR [12] $end
$var wire 1 0 DRAM_ADDR [11] $end
$var wire 1 1 DRAM_ADDR [10] $end
$var wire 1 2 DRAM_ADDR [9] $end
$var wire 1 3 DRAM_ADDR [8] $end
$var wire 1 4 DRAM_ADDR [7] $end
$var wire 1 5 DRAM_ADDR [6] $end
$var wire 1 6 DRAM_ADDR [5] $end
$var wire 1 7 DRAM_ADDR [4] $end
$var wire 1 8 DRAM_ADDR [3] $end
$var wire 1 9 DRAM_ADDR [2] $end
$var wire 1 : DRAM_ADDR [1] $end
$var wire 1 ; DRAM_ADDR [0] $end
$var wire 1 < DRAM_BA [1] $end
$var wire 1 = DRAM_BA [0] $end
$var wire 1 > DRAM_CAS_N $end
$var wire 1 ? DRAM_CKE $end
$var wire 1 @ DRAM_CLK $end
$var wire 1 A DRAM_CS_N $end
$var wire 1 B DRAM_DQ [15] $end
$var wire 1 C DRAM_DQ [14] $end
$var wire 1 D DRAM_DQ [13] $end
$var wire 1 E DRAM_DQ [12] $end
$var wire 1 F DRAM_DQ [11] $end
$var wire 1 G DRAM_DQ [10] $end
$var wire 1 H DRAM_DQ [9] $end
$var wire 1 I DRAM_DQ [8] $end
$var wire 1 J DRAM_DQ [7] $end
$var wire 1 K DRAM_DQ [6] $end
$var wire 1 L DRAM_DQ [5] $end
$var wire 1 M DRAM_DQ [4] $end
$var wire 1 N DRAM_DQ [3] $end
$var wire 1 O DRAM_DQ [2] $end
$var wire 1 P DRAM_DQ [1] $end
$var wire 1 Q DRAM_DQ [0] $end
$var wire 1 R DRAM_LDQM $end
$var wire 1 S DRAM_RAS_N $end
$var wire 1 T DRAM_UDQM $end
$var wire 1 U DRAM_WE_N $end
$var wire 1 V FPGA_I2C_SCLK $end
$var wire 1 W FPGA_I2C_SDAT $end
$var wire 1 X NAND_DQ [7] $end
$var wire 1 Y NAND_DQ [6] $end
$var wire 1 Z NAND_DQ [5] $end
$var wire 1 [ NAND_DQ [4] $end
$var wire 1 \ NAND_DQ [3] $end
$var wire 1 ] NAND_DQ [2] $end
$var wire 1 ^ NAND_DQ [1] $end
$var wire 1 _ NAND_DQ [0] $end
$var wire 1 ` NAND_NWP $end
$var wire 1 a NAND_NWE $end
$var wire 1 b NAND_ALE $end
$var wire 1 c NAND_CLE $end
$var wire 1 d NAND_NCE $end
$var wire 1 e NAND_NRE $end
$var wire 1 f NAND_RNB $end
$var wire 1 g GPIO_0 [35] $end
$var wire 1 h GPIO_0 [34] $end
$var wire 1 i GPIO_0 [33] $end
$var wire 1 j GPIO_0 [32] $end
$var wire 1 k GPIO_0 [31] $end
$var wire 1 l GPIO_0 [30] $end
$var wire 1 m GPIO_0 [29] $end
$var wire 1 n GPIO_0 [28] $end
$var wire 1 o GPIO_0 [27] $end
$var wire 1 p GPIO_0 [26] $end
$var wire 1 q GPIO_0 [25] $end
$var wire 1 r GPIO_0 [24] $end
$var wire 1 s GPIO_0 [23] $end
$var wire 1 t GPIO_0 [22] $end
$var wire 1 u GPIO_0 [21] $end
$var wire 1 v GPIO_0 [20] $end
$var wire 1 w GPIO_0 [19] $end
$var wire 1 x GPIO_0 [18] $end
$var wire 1 y GPIO_0 [17] $end
$var wire 1 z GPIO_0 [16] $end
$var wire 1 { GPIO_0 [15] $end
$var wire 1 | GPIO_1 [35] $end
$var wire 1 } GPIO_1 [34] $end
$var wire 1 ~ GPIO_1 [33] $end
$var wire 1 !! GPIO_1 [32] $end
$var wire 1 "! GPIO_1 [31] $end
$var wire 1 #! GPIO_1 [30] $end
$var wire 1 $! GPIO_1 [29] $end
$var wire 1 %! GPIO_1 [28] $end
$var wire 1 &! GPIO_1 [27] $end
$var wire 1 '! GPIO_1 [26] $end
$var wire 1 (! GPIO_1 [25] $end
$var wire 1 )! GPIO_1 [24] $end
$var wire 1 *! GPIO_1 [23] $end
$var wire 1 +! GPIO_1 [22] $end
$var wire 1 ,! GPIO_1 [21] $end
$var wire 1 -! GPIO_1 [20] $end
$var wire 1 .! GPIO_1 [19] $end
$var wire 1 /! GPIO_1 [18] $end
$var wire 1 0! GPIO_1 [17] $end
$var wire 1 1! GPIO_1 [16] $end
$var wire 1 2! GPIO_1 [15] $end
$var wire 1 3! GPIO_1 [14] $end
$var wire 1 4! GPIO_1 [13] $end
$var wire 1 5! GPIO_1 [12] $end
$var wire 1 6! GPIO_1 [11] $end
$var wire 1 7! GPIO_1 [10] $end
$var wire 1 8! GPIO_1 [9] $end
$var wire 1 9! GPIO_1 [8] $end
$var wire 1 :! GPIO_1 [7] $end
$var wire 1 ;! GPIO_1 [6] $end
$var wire 1 <! GPIO_1 [5] $end
$var wire 1 =! GPIO_1 [4] $end
$var wire 1 >! GPIO_1 [3] $end
$var wire 1 ?! GPIO_1 [2] $end
$var wire 1 @! GPIO_1 [1] $end
$var wire 1 A! GPIO_1 [0] $end
$var wire 1 B! HEX0 [6] $end
$var wire 1 C! HEX0 [5] $end
$var wire 1 D! HEX0 [4] $end
$var wire 1 E! HEX0 [3] $end
$var wire 1 F! HEX0 [2] $end
$var wire 1 G! HEX0 [1] $end
$var wire 1 H! HEX0 [0] $end
$var wire 1 I! HEX1 [6] $end
$var wire 1 J! HEX1 [5] $end
$var wire 1 K! HEX1 [4] $end
$var wire 1 L! HEX1 [3] $end
$var wire 1 M! HEX1 [2] $end
$var wire 1 N! HEX1 [1] $end
$var wire 1 O! HEX1 [0] $end
$var wire 1 P! HEX2 [6] $end
$var wire 1 Q! HEX2 [5] $end
$var wire 1 R! HEX2 [4] $end
$var wire 1 S! HEX2 [3] $end
$var wire 1 T! HEX2 [2] $end
$var wire 1 U! HEX2 [1] $end
$var wire 1 V! HEX2 [0] $end
$var wire 1 W! HEX3 [6] $end
$var wire 1 X! HEX3 [5] $end
$var wire 1 Y! HEX3 [4] $end
$var wire 1 Z! HEX3 [3] $end
$var wire 1 [! HEX3 [2] $end
$var wire 1 \! HEX3 [1] $end
$var wire 1 ]! HEX3 [0] $end
$var wire 1 ^! HEX4 [6] $end
$var wire 1 _! HEX4 [5] $end
$var wire 1 `! HEX4 [4] $end
$var wire 1 a! HEX4 [3] $end
$var wire 1 b! HEX4 [2] $end
$var wire 1 c! HEX4 [1] $end
$var wire 1 d! HEX4 [0] $end
$var wire 1 e! HEX5 [6] $end
$var wire 1 f! HEX5 [5] $end
$var wire 1 g! HEX5 [4] $end
$var wire 1 h! HEX5 [3] $end
$var wire 1 i! HEX5 [2] $end
$var wire 1 j! HEX5 [1] $end
$var wire 1 k! HEX5 [0] $end
$var wire 1 l! IRDA_RXD $end
$var wire 1 m! IRDA_TXD $end
$var wire 1 n! KEY [3] $end
$var wire 1 o! KEY [2] $end
$var wire 1 p! KEY [1] $end
$var wire 1 q! KEY [0] $end
$var wire 1 r! LEDR [9] $end
$var wire 1 s! LEDR [8] $end
$var wire 1 t! LEDR [7] $end
$var wire 1 u! LEDR [6] $end
$var wire 1 v! LEDR [5] $end
$var wire 1 w! LEDR [4] $end
$var wire 1 x! LEDR [3] $end
$var wire 1 y! LEDR [2] $end
$var wire 1 z! LEDR [1] $end
$var wire 1 {! LEDR [0] $end
$var wire 1 |! PS2_CLK $end
$var wire 1 }! PS2_DAT $end
$var wire 1 ~! PS2_CLK2 $end
$var wire 1 !" PS2_DAT2 $end
$var wire 1 "" SW [9] $end
$var wire 1 #" SW [8] $end
$var wire 1 $" SW [7] $end
$var wire 1 %" SW [6] $end
$var wire 1 &" SW [5] $end
$var wire 1 '" SW [4] $end
$var wire 1 (" SW [3] $end
$var wire 1 )" SW [2] $end
$var wire 1 *" SW [1] $end
$var wire 1 +" SW [0] $end
$var wire 1 ," TD_CLK27 $end
$var wire 1 -" TD_DATA [7] $end
$var wire 1 ." TD_DATA [6] $end
$var wire 1 /" TD_DATA [5] $end
$var wire 1 0" TD_DATA [4] $end
$var wire 1 1" TD_DATA [3] $end
$var wire 1 2" TD_DATA [2] $end
$var wire 1 3" TD_DATA [1] $end
$var wire 1 4" TD_DATA [0] $end
$var wire 1 5" TD_HS $end
$var wire 1 6" TD_RESET_N $end
$var wire 1 7" TD_VS $end
$var wire 1 8" VGA_B [7] $end
$var wire 1 9" VGA_B [6] $end
$var wire 1 :" VGA_B [5] $end
$var wire 1 ;" VGA_B [4] $end
$var wire 1 <" VGA_B [3] $end
$var wire 1 =" VGA_B [2] $end
$var wire 1 >" VGA_B [1] $end
$var wire 1 ?" VGA_B [0] $end
$var wire 1 @" VGA_BLANK_N $end
$var wire 1 A" VGA_CLK $end
$var wire 1 B" VGA_G [7] $end
$var wire 1 C" VGA_G [6] $end
$var wire 1 D" VGA_G [5] $end
$var wire 1 E" VGA_G [4] $end
$var wire 1 F" VGA_G [3] $end
$var wire 1 G" VGA_G [2] $end
$var wire 1 H" VGA_G [1] $end
$var wire 1 I" VGA_G [0] $end
$var wire 1 J" VGA_HS $end
$var wire 1 K" VGA_R [7] $end
$var wire 1 L" VGA_R [6] $end
$var wire 1 M" VGA_R [5] $end
$var wire 1 N" VGA_R [4] $end
$var wire 1 O" VGA_R [3] $end
$var wire 1 P" VGA_R [2] $end
$var wire 1 Q" VGA_R [1] $end
$var wire 1 R" VGA_R [0] $end
$var wire 1 S" VGA_SYNC_N $end
$var wire 1 T" VGA_VS $end
$var wire 1 U" HPS_DDR3_ADDR [14] $end
$var wire 1 V" HPS_DDR3_ADDR [13] $end
$var wire 1 W" HPS_DDR3_ADDR [12] $end
$var wire 1 X" HPS_DDR3_ADDR [11] $end
$var wire 1 Y" HPS_DDR3_ADDR [10] $end
$var wire 1 Z" HPS_DDR3_ADDR [9] $end
$var wire 1 [" HPS_DDR3_ADDR [8] $end
$var wire 1 \" HPS_DDR3_ADDR [7] $end
$var wire 1 ]" HPS_DDR3_ADDR [6] $end
$var wire 1 ^" HPS_DDR3_ADDR [5] $end
$var wire 1 _" HPS_DDR3_ADDR [4] $end
$var wire 1 `" HPS_DDR3_ADDR [3] $end
$var wire 1 a" HPS_DDR3_ADDR [2] $end
$var wire 1 b" HPS_DDR3_ADDR [1] $end
$var wire 1 c" HPS_DDR3_ADDR [0] $end
$var wire 1 d" HPS_DDR3_BA [2] $end
$var wire 1 e" HPS_DDR3_BA [1] $end
$var wire 1 f" HPS_DDR3_BA [0] $end
$var wire 1 g" HPS_DDR3_CAS_N $end
$var wire 1 h" HPS_DDR3_CKE $end
$var wire 1 i" HPS_DDR3_CK_N $end
$var wire 1 j" HPS_DDR3_CK_P $end
$var wire 1 k" HPS_DDR3_CS_N $end
$var wire 1 l" HPS_DDR3_DM [3] $end
$var wire 1 m" HPS_DDR3_DM [2] $end
$var wire 1 n" HPS_DDR3_DM [1] $end
$var wire 1 o" HPS_DDR3_DM [0] $end
$var wire 1 p" HPS_DDR3_DQ [31] $end
$var wire 1 q" HPS_DDR3_DQ [30] $end
$var wire 1 r" HPS_DDR3_DQ [29] $end
$var wire 1 s" HPS_DDR3_DQ [28] $end
$var wire 1 t" HPS_DDR3_DQ [27] $end
$var wire 1 u" HPS_DDR3_DQ [26] $end
$var wire 1 v" HPS_DDR3_DQ [25] $end
$var wire 1 w" HPS_DDR3_DQ [24] $end
$var wire 1 x" HPS_DDR3_DQ [23] $end
$var wire 1 y" HPS_DDR3_DQ [22] $end
$var wire 1 z" HPS_DDR3_DQ [21] $end
$var wire 1 {" HPS_DDR3_DQ [20] $end
$var wire 1 |" HPS_DDR3_DQ [19] $end
$var wire 1 }" HPS_DDR3_DQ [18] $end
$var wire 1 ~" HPS_DDR3_DQ [17] $end
$var wire 1 !# HPS_DDR3_DQ [16] $end
$var wire 1 "# HPS_DDR3_DQ [15] $end
$var wire 1 ## HPS_DDR3_DQ [14] $end
$var wire 1 $# HPS_DDR3_DQ [13] $end
$var wire 1 %# HPS_DDR3_DQ [12] $end
$var wire 1 &# HPS_DDR3_DQ [11] $end
$var wire 1 '# HPS_DDR3_DQ [10] $end
$var wire 1 (# HPS_DDR3_DQ [9] $end
$var wire 1 )# HPS_DDR3_DQ [8] $end
$var wire 1 *# HPS_DDR3_DQ [7] $end
$var wire 1 +# HPS_DDR3_DQ [6] $end
$var wire 1 ,# HPS_DDR3_DQ [5] $end
$var wire 1 -# HPS_DDR3_DQ [4] $end
$var wire 1 .# HPS_DDR3_DQ [3] $end
$var wire 1 /# HPS_DDR3_DQ [2] $end
$var wire 1 0# HPS_DDR3_DQ [1] $end
$var wire 1 1# HPS_DDR3_DQ [0] $end
$var wire 1 2# HPS_DDR3_DQS_N [3] $end
$var wire 1 3# HPS_DDR3_DQS_N [2] $end
$var wire 1 4# HPS_DDR3_DQS_N [1] $end
$var wire 1 5# HPS_DDR3_DQS_N [0] $end
$var wire 1 6# HPS_DDR3_DQS_P [3] $end
$var wire 1 7# HPS_DDR3_DQS_P [2] $end
$var wire 1 8# HPS_DDR3_DQS_P [1] $end
$var wire 1 9# HPS_DDR3_DQS_P [0] $end
$var wire 1 :# HPS_DDR3_ODT $end
$var wire 1 ;# HPS_DDR3_RAS_N $end
$var wire 1 <# HPS_DDR3_RESET_N $end
$var wire 1 =# HPS_DDR3_RZQ $end
$var wire 1 ># HPS_DDR3_WE_N $end
$var wire 1 ?# HPS_ENET_GTX_CLK $end
$var wire 1 @# HPS_ENET_INT_N $end
$var wire 1 A# HPS_ENET_MDC $end
$var wire 1 B# HPS_ENET_MDIO $end
$var wire 1 C# HPS_ENET_RX_CLK $end
$var wire 1 D# HPS_ENET_RX_DATA [3] $end
$var wire 1 E# HPS_ENET_RX_DATA [2] $end
$var wire 1 F# HPS_ENET_RX_DATA [1] $end
$var wire 1 G# HPS_ENET_RX_DATA [0] $end
$var wire 1 H# HPS_ENET_RX_DV $end
$var wire 1 I# HPS_ENET_TX_DATA [3] $end
$var wire 1 J# HPS_ENET_TX_DATA [2] $end
$var wire 1 K# HPS_ENET_TX_DATA [1] $end
$var wire 1 L# HPS_ENET_TX_DATA [0] $end
$var wire 1 M# HPS_ENET_TX_EN $end
$var wire 1 N# HPS_FLASH_DATA [3] $end
$var wire 1 O# HPS_FLASH_DATA [2] $end
$var wire 1 P# HPS_FLASH_DATA [1] $end
$var wire 1 Q# HPS_FLASH_DATA [0] $end
$var wire 1 R# HPS_FLASH_DCLK $end
$var wire 1 S# HPS_FLASH_NCSO $end
$var wire 1 T# HPS_GSENSOR_INT $end
$var wire 1 U# HPS_GPIO [1] $end
$var wire 1 V# HPS_GPIO [0] $end
$var wire 1 W# HPS_I2C_CONTROL $end
$var wire 1 X# HPS_I2C1_SCLK $end
$var wire 1 Y# HPS_I2C1_SDAT $end
$var wire 1 Z# HPS_I2C2_SCLK $end
$var wire 1 [# HPS_I2C2_SDAT $end
$var wire 1 \# HPS_KEY $end
$var wire 1 ]# HPS_LED $end
$var wire 1 ^# HPS_SD_CLK $end
$var wire 1 _# HPS_SD_CMD $end
$var wire 1 `# HPS_SD_DATA [3] $end
$var wire 1 a# HPS_SD_DATA [2] $end
$var wire 1 b# HPS_SD_DATA [1] $end
$var wire 1 c# HPS_SD_DATA [0] $end
$var wire 1 d# HPS_SPIM_CLK $end
$var wire 1 e# HPS_SPIM_MISO $end
$var wire 1 f# HPS_SPIM_MOSI $end
$var wire 1 g# HPS_SPIM_SS $end
$var wire 1 h# HPS_UART_RX $end
$var wire 1 i# HPS_UART_TX $end
$var wire 1 j# HPS_CONV_USB_N $end
$var wire 1 k# HPS_USB_CLKOUT $end
$var wire 1 l# HPS_USB_DATA [7] $end
$var wire 1 m# HPS_USB_DATA [6] $end
$var wire 1 n# HPS_USB_DATA [5] $end
$var wire 1 o# HPS_USB_DATA [4] $end
$var wire 1 p# HPS_USB_DATA [3] $end
$var wire 1 q# HPS_USB_DATA [2] $end
$var wire 1 r# HPS_USB_DATA [1] $end
$var wire 1 s# HPS_USB_DATA [0] $end
$var wire 1 t# HPS_USB_DIR $end
$var wire 1 u# HPS_USB_NXT $end
$var wire 1 v# HPS_USB_STP $end
$var wire 1 &$ hex3_hex0 [31] $end
$var wire 1 '$ hex3_hex0 [30] $end
$var wire 1 ($ hex3_hex0 [29] $end
$var wire 1 )$ hex3_hex0 [28] $end
$var wire 1 *$ hex3_hex0 [27] $end
$var wire 1 +$ hex3_hex0 [26] $end
$var wire 1 ,$ hex3_hex0 [25] $end
$var wire 1 -$ hex3_hex0 [24] $end
$var wire 1 .$ hex3_hex0 [23] $end
$var wire 1 /$ hex3_hex0 [22] $end
$var wire 1 0$ hex3_hex0 [21] $end
$var wire 1 1$ hex3_hex0 [20] $end
$var wire 1 2$ hex3_hex0 [19] $end
$var wire 1 3$ hex3_hex0 [18] $end
$var wire 1 4$ hex3_hex0 [17] $end
$var wire 1 5$ hex3_hex0 [16] $end
$var wire 1 6$ hex3_hex0 [15] $end
$var wire 1 7$ hex3_hex0 [14] $end
$var wire 1 8$ hex3_hex0 [13] $end
$var wire 1 9$ hex3_hex0 [12] $end
$var wire 1 :$ hex3_hex0 [11] $end
$var wire 1 ;$ hex3_hex0 [10] $end
$var wire 1 <$ hex3_hex0 [9] $end
$var wire 1 =$ hex3_hex0 [8] $end
$var wire 1 >$ hex3_hex0 [7] $end
$var wire 1 ?$ hex3_hex0 [6] $end
$var wire 1 @$ hex3_hex0 [5] $end
$var wire 1 A$ hex3_hex0 [4] $end
$var wire 1 B$ hex3_hex0 [3] $end
$var wire 1 C$ hex3_hex0 [2] $end
$var wire 1 D$ hex3_hex0 [1] $end
$var wire 1 E$ hex3_hex0 [0] $end
$var wire 1 F$ hex5_hex4 [15] $end
$var wire 1 G$ hex5_hex4 [14] $end
$var wire 1 H$ hex5_hex4 [13] $end
$var wire 1 I$ hex5_hex4 [12] $end
$var wire 1 J$ hex5_hex4 [11] $end
$var wire 1 K$ hex5_hex4 [10] $end
$var wire 1 L$ hex5_hex4 [9] $end
$var wire 1 M$ hex5_hex4 [8] $end
$var wire 1 N$ hex5_hex4 [7] $end
$var wire 1 O$ hex5_hex4 [6] $end
$var wire 1 P$ hex5_hex4 [5] $end
$var wire 1 Q$ hex5_hex4 [4] $end
$var wire 1 R$ hex5_hex4 [3] $end
$var wire 1 S$ hex5_hex4 [2] $end
$var wire 1 T$ hex5_hex4 [1] $end
$var wire 1 U$ hex5_hex4 [0] $end
$var wire 1 V$ NAND_DUMMY [7] $end
$var wire 1 W$ NAND_DUMMY [6] $end
$var wire 1 X$ NAND_DUMMY [5] $end
$var wire 1 Y$ NAND_DUMMY [4] $end
$var wire 1 Z$ NAND_DUMMY [3] $end
$var wire 1 [$ NAND_DUMMY [2] $end
$var wire 1 \$ NAND_DUMMY [1] $end
$var wire 1 ]$ NAND_DUMMY [0] $end
$var wire 1 ^$ GPIO_DUMMY [14] $end
$var wire 1 _$ GPIO_DUMMY [13] $end
$var wire 1 `$ GPIO_DUMMY [12] $end
$var wire 1 a$ GPIO_DUMMY [11] $end
$var wire 1 b$ GPIO_DUMMY [10] $end
$var wire 1 c$ GPIO_DUMMY [9] $end
$var wire 1 d$ GPIO_DUMMY [8] $end
$var wire 1 e$ GPIO_DUMMY [7] $end
$var wire 1 f$ GPIO_DUMMY [6] $end
$var wire 1 g$ GPIO_DUMMY [5] $end
$var wire 1 h$ GPIO_DUMMY [4] $end
$var wire 1 i$ GPIO_DUMMY [3] $end
$var wire 1 j$ GPIO_DUMMY [2] $end
$var wire 1 k$ GPIO_DUMMY [1] $end
$var wire 1 l$ GPIO_DUMMY [0] $end

$scope begin sim_gen $end
$var reg 1 m$ rst $end
$var reg 1 n$ rd $end
$var reg 1 o$ wr $end
$var reg 2 p$ addr [1:0] $end
$var reg 32 q$ wrdata [31:0] $end
$var wire 1 r$ rddata [31] $end
$var wire 1 s$ rddata [30] $end
$var wire 1 t$ rddata [29] $end
$var wire 1 u$ rddata [28] $end
$var wire 1 v$ rddata [27] $end
$var wire 1 w$ rddata [26] $end
$var wire 1 x$ rddata [25] $end
$var wire 1 y$ rddata [24] $end
$var wire 1 z$ rddata [23] $end
$var wire 1 {$ rddata [22] $end
$var wire 1 |$ rddata [21] $end
$var wire 1 }$ rddata [20] $end
$var wire 1 ~$ rddata [19] $end
$var wire 1 !% rddata [18] $end
$var wire 1 "% rddata [17] $end
$var wire 1 #% rddata [16] $end
$var wire 1 $% rddata [15] $end
$var wire 1 %% rddata [14] $end
$var wire 1 &% rddata [13] $end
$var wire 1 '% rddata [12] $end
$var wire 1 (% rddata [11] $end
$var wire 1 )% rddata [10] $end
$var wire 1 *% rddata [9] $end
$var wire 1 +% rddata [8] $end
$var wire 1 ,% rddata [7] $end
$var wire 1 -% rddata [6] $end
$var wire 1 .% rddata [5] $end
$var wire 1 /% rddata [4] $end
$var wire 1 0% rddata [3] $end
$var wire 1 1% rddata [2] $end
$var wire 1 2% rddata [1] $end
$var wire 1 3% rddata [0] $end

$scope module nand_sim0 $end
$var wire 1 4% clk $end
$var wire 1 5% resetn $end
$var wire 1 6% readdata [31] $end
$var wire 1 7% readdata [30] $end
$var wire 1 8% readdata [29] $end
$var wire 1 9% readdata [28] $end
$var wire 1 :% readdata [27] $end
$var wire 1 ;% readdata [26] $end
$var wire 1 <% readdata [25] $end
$var wire 1 =% readdata [24] $end
$var wire 1 >% readdata [23] $end
$var wire 1 ?% readdata [22] $end
$var wire 1 @% readdata [21] $end
$var wire 1 A% readdata [20] $end
$var wire 1 B% readdata [19] $end
$var wire 1 C% readdata [18] $end
$var wire 1 D% readdata [17] $end
$var wire 1 E% readdata [16] $end
$var wire 1 F% readdata [15] $end
$var wire 1 G% readdata [14] $end
$var wire 1 H% readdata [13] $end
$var wire 1 I% readdata [12] $end
$var wire 1 J% readdata [11] $end
$var wire 1 K% readdata [10] $end
$var wire 1 L% readdata [9] $end
$var wire 1 M% readdata [8] $end
$var wire 1 N% readdata [7] $end
$var wire 1 O% readdata [6] $end
$var wire 1 P% readdata [5] $end
$var wire 1 Q% readdata [4] $end
$var wire 1 R% readdata [3] $end
$var wire 1 S% readdata [2] $end
$var wire 1 T% readdata [1] $end
$var wire 1 U% readdata [0] $end
$var wire 1 V% writedata [31] $end
$var wire 1 W% writedata [30] $end
$var wire 1 X% writedata [29] $end
$var wire 1 Y% writedata [28] $end
$var wire 1 Z% writedata [27] $end
$var wire 1 [% writedata [26] $end
$var wire 1 \% writedata [25] $end
$var wire 1 ]% writedata [24] $end
$var wire 1 ^% writedata [23] $end
$var wire 1 _% writedata [22] $end
$var wire 1 `% writedata [21] $end
$var wire 1 a% writedata [20] $end
$var wire 1 b% writedata [19] $end
$var wire 1 c% writedata [18] $end
$var wire 1 d% writedata [17] $end
$var wire 1 e% writedata [16] $end
$var wire 1 f% writedata [15] $end
$var wire 1 g% writedata [14] $end
$var wire 1 h% writedata [13] $end
$var wire 1 i% writedata [12] $end
$var wire 1 j% writedata [11] $end
$var wire 1 k% writedata [10] $end
$var wire 1 l% writedata [9] $end
$var wire 1 m% writedata [8] $end
$var wire 1 n% writedata [7] $end
$var wire 1 o% writedata [6] $end
$var wire 1 p% writedata [5] $end
$var wire 1 q% writedata [4] $end
$var wire 1 r% writedata [3] $end
$var wire 1 s% writedata [2] $end
$var wire 1 t% writedata [1] $end
$var wire 1 u% writedata [0] $end
$var wire 1 v% pread $end
$var wire 1 w% pwrite $end
$var wire 1 x% address [1] $end
$var wire 1 y% address [0] $end
$var wire 1 z% nand_cle $end
$var wire 1 {% nand_ale $end
$var wire 1 |% nand_nwe $end
$var wire 1 }% nand_nwp $end
$var wire 1 ~% nand_nce $end
$var wire 1 !& nand_nre $end
$var wire 1 "& nand_rnb $end
$var wire 1 #& nand_data [15] $end
$var wire 1 $& nand_data [14] $end
$var wire 1 %& nand_data [13] $end
$var wire 1 && nand_data [12] $end
$var wire 1 '& nand_data [11] $end
$var wire 1 (& nand_data [10] $end
$var wire 1 )& nand_data [9] $end
$var wire 1 *& nand_data [8] $end
$var wire 1 +& nand_data [7] $end
$var wire 1 ,& nand_data [6] $end
$var wire 1 -& nand_data [5] $end
$var wire 1 .& nand_data [4] $end
$var wire 1 /& nand_data [3] $end
$var wire 1 0& nand_data [2] $end
$var wire 1 1& nand_data [1] $end
$var wire 1 2& nand_data [0] $end
$var wire 1 3& nreset $end
$var wire 1 4& n_data_out [7] $end
$var wire 1 5& n_data_out [6] $end
$var wire 1 6& n_data_out [5] $end
$var wire 1 7& n_data_out [4] $end
$var wire 1 8& n_data_out [3] $end
$var wire 1 9& n_data_out [2] $end
$var wire 1 :& n_data_out [1] $end
$var wire 1 ;& n_data_out [0] $end
$var wire 1 <& n_data_in [7] $end
$var wire 1 =& n_data_in [6] $end
$var wire 1 >& n_data_in [5] $end
$var wire 1 ?& n_data_in [4] $end
$var wire 1 @& n_data_in [3] $end
$var wire 1 A& n_data_in [2] $end
$var wire 1 B& n_data_in [1] $end
$var wire 1 C& n_data_in [0] $end
$var wire 1 D& n_busy $end
$var wire 1 E& n_activate $end
$var wire 1 F& n_cmd_in [7] $end
$var wire 1 G& n_cmd_in [6] $end
$var wire 1 H& n_cmd_in [5] $end
$var wire 1 I& n_cmd_in [4] $end
$var wire 1 J& n_cmd_in [3] $end
$var wire 1 K& n_cmd_in [2] $end
$var wire 1 L& n_cmd_in [1] $end
$var wire 1 M& n_cmd_in [0] $end
$var wire 1 N& prev_pwrite $end
$var wire 1 O& prev_address [1] $end
$var wire 1 P& prev_address [0] $end

$scope module NANDA $end
$var wire 1 4% clk $end
$var wire 1 Q& enable $end
$var wire 1 z% nand_cle $end
$var wire 1 {% nand_ale $end
$var wire 1 |% nand_nwe $end
$var wire 1 }% nand_nwp $end
$var wire 1 ~% nand_nce $end
$var wire 1 !& nand_nre $end
$var wire 1 "& nand_rnb $end
$var wire 1 #& nand_data [15] $end
$var wire 1 $& nand_data [14] $end
$var wire 1 %& nand_data [13] $end
$var wire 1 && nand_data [12] $end
$var wire 1 '& nand_data [11] $end
$var wire 1 (& nand_data [10] $end
$var wire 1 )& nand_data [9] $end
$var wire 1 *& nand_data [8] $end
$var wire 1 +& nand_data [7] $end
$var wire 1 ,& nand_data [6] $end
$var wire 1 -& nand_data [5] $end
$var wire 1 .& nand_data [4] $end
$var wire 1 /& nand_data [3] $end
$var wire 1 0& nand_data [2] $end
$var wire 1 1& nand_data [1] $end
$var wire 1 2& nand_data [0] $end
$var wire 1 5% nreset $end
$var wire 1 4& data_out [7] $end
$var wire 1 5& data_out [6] $end
$var wire 1 6& data_out [5] $end
$var wire 1 7& data_out [4] $end
$var wire 1 8& data_out [3] $end
$var wire 1 9& data_out [2] $end
$var wire 1 :& data_out [1] $end
$var wire 1 ;& data_out [0] $end
$var wire 1 <& data_in [7] $end
$var wire 1 =& data_in [6] $end
$var wire 1 >& data_in [5] $end
$var wire 1 ?& data_in [4] $end
$var wire 1 @& data_in [3] $end
$var wire 1 A& data_in [2] $end
$var wire 1 B& data_in [1] $end
$var wire 1 C& data_in [0] $end
$var wire 1 D& busy $end
$var wire 1 E& activate $end
$var wire 1 F& cmd_in [7] $end
$var wire 1 G& cmd_in [6] $end
$var wire 1 H& cmd_in [5] $end
$var wire 1 I& cmd_in [4] $end
$var wire 1 J& cmd_in [3] $end
$var wire 1 K& cmd_in [2] $end
$var wire 1 L& cmd_in [1] $end
$var wire 1 M& cmd_in [0] $end
$var wire 1 R& cle_activate $end
$var wire 1 S& cle_latch_ctrl $end
$var wire 1 T& cle_write_enable $end
$var wire 1 U& cle_busy $end
$var wire 1 V& cle_data_in [15] $end
$var wire 1 W& cle_data_in [14] $end
$var wire 1 X& cle_data_in [13] $end
$var wire 1 Y& cle_data_in [12] $end
$var wire 1 Z& cle_data_in [11] $end
$var wire 1 [& cle_data_in [10] $end
$var wire 1 \& cle_data_in [9] $end
$var wire 1 ]& cle_data_in [8] $end
$var wire 1 ^& cle_data_in [7] $end
$var wire 1 _& cle_data_in [6] $end
$var wire 1 `& cle_data_in [5] $end
$var wire 1 a& cle_data_in [4] $end
$var wire 1 b& cle_data_in [3] $end
$var wire 1 c& cle_data_in [2] $end
$var wire 1 d& cle_data_in [1] $end
$var wire 1 e& cle_data_in [0] $end
$var wire 1 f& cle_data_out [15] $end
$var wire 1 g& cle_data_out [14] $end
$var wire 1 h& cle_data_out [13] $end
$var wire 1 i& cle_data_out [12] $end
$var wire 1 j& cle_data_out [11] $end
$var wire 1 k& cle_data_out [10] $end
$var wire 1 l& cle_data_out [9] $end
$var wire 1 m& cle_data_out [8] $end
$var wire 1 n& cle_data_out [7] $end
$var wire 1 o& cle_data_out [6] $end
$var wire 1 p& cle_data_out [5] $end
$var wire 1 q& cle_data_out [4] $end
$var wire 1 r& cle_data_out [3] $end
$var wire 1 s& cle_data_out [2] $end
$var wire 1 t& cle_data_out [1] $end
$var wire 1 u& cle_data_out [0] $end
$var wire 1 v& ale_activate $end
$var wire 1 w& ale_latch_ctrl $end
$var wire 1 x& ale_write_enable $end
$var wire 1 y& ale_busy $end
$var wire 1 z& ale_data_in [15] $end
$var wire 1 {& ale_data_in [14] $end
$var wire 1 |& ale_data_in [13] $end
$var wire 1 }& ale_data_in [12] $end
$var wire 1 ~& ale_data_in [11] $end
$var wire 1 !' ale_data_in [10] $end
$var wire 1 "' ale_data_in [9] $end
$var wire 1 #' ale_data_in [8] $end
$var wire 1 $' ale_data_in [7] $end
$var wire 1 %' ale_data_in [6] $end
$var wire 1 &' ale_data_in [5] $end
$var wire 1 '' ale_data_in [4] $end
$var wire 1 (' ale_data_in [3] $end
$var wire 1 )' ale_data_in [2] $end
$var wire 1 *' ale_data_in [1] $end
$var wire 1 +' ale_data_in [0] $end
$var wire 1 ,' ale_data_out [15] $end
$var wire 1 -' ale_data_out [14] $end
$var wire 1 .' ale_data_out [13] $end
$var wire 1 /' ale_data_out [12] $end
$var wire 1 0' ale_data_out [11] $end
$var wire 1 1' ale_data_out [10] $end
$var wire 1 2' ale_data_out [9] $end
$var wire 1 3' ale_data_out [8] $end
$var wire 1 4' ale_data_out [7] $end
$var wire 1 5' ale_data_out [6] $end
$var wire 1 6' ale_data_out [5] $end
$var wire 1 7' ale_data_out [4] $end
$var wire 1 8' ale_data_out [3] $end
$var wire 1 9' ale_data_out [2] $end
$var wire 1 :' ale_data_out [1] $end
$var wire 1 ;' ale_data_out [0] $end
$var wire 1 <' io_rd_activate $end
$var wire 1 =' io_rd_io_ctrl $end
$var wire 1 >' io_rd_busy $end
$var wire 1 ?' io_rd_data_in [15] $end
$var wire 1 @' io_rd_data_in [14] $end
$var wire 1 A' io_rd_data_in [13] $end
$var wire 1 B' io_rd_data_in [12] $end
$var wire 1 C' io_rd_data_in [11] $end
$var wire 1 D' io_rd_data_in [10] $end
$var wire 1 E' io_rd_data_in [9] $end
$var wire 1 F' io_rd_data_in [8] $end
$var wire 1 G' io_rd_data_in [7] $end
$var wire 1 H' io_rd_data_in [6] $end
$var wire 1 I' io_rd_data_in [5] $end
$var wire 1 J' io_rd_data_in [4] $end
$var wire 1 K' io_rd_data_in [3] $end
$var wire 1 L' io_rd_data_in [2] $end
$var wire 1 M' io_rd_data_in [1] $end
$var wire 1 N' io_rd_data_in [0] $end
$var wire 1 O' io_rd_data_out [15] $end
$var wire 1 P' io_rd_data_out [14] $end
$var wire 1 Q' io_rd_data_out [13] $end
$var wire 1 R' io_rd_data_out [12] $end
$var wire 1 S' io_rd_data_out [11] $end
$var wire 1 T' io_rd_data_out [10] $end
$var wire 1 U' io_rd_data_out [9] $end
$var wire 1 V' io_rd_data_out [8] $end
$var wire 1 W' io_rd_data_out [7] $end
$var wire 1 X' io_rd_data_out [6] $end
$var wire 1 Y' io_rd_data_out [5] $end
$var wire 1 Z' io_rd_data_out [4] $end
$var wire 1 [' io_rd_data_out [3] $end
$var wire 1 \' io_rd_data_out [2] $end
$var wire 1 ]' io_rd_data_out [1] $end
$var wire 1 ^' io_rd_data_out [0] $end
$var wire 1 _' io_wr_activate $end
$var wire 1 `' io_wr_io_ctrl $end
$var wire 1 a' io_wr_busy $end
$var wire 1 b' io_wr_data_in [15] $end
$var wire 1 c' io_wr_data_in [14] $end
$var wire 1 d' io_wr_data_in [13] $end
$var wire 1 e' io_wr_data_in [12] $end
$var wire 1 f' io_wr_data_in [11] $end
$var wire 1 g' io_wr_data_in [10] $end
$var wire 1 h' io_wr_data_in [9] $end
$var wire 1 i' io_wr_data_in [8] $end
$var wire 1 j' io_wr_data_in [7] $end
$var wire 1 k' io_wr_data_in [6] $end
$var wire 1 l' io_wr_data_in [5] $end
$var wire 1 m' io_wr_data_in [4] $end
$var wire 1 n' io_wr_data_in [3] $end
$var wire 1 o' io_wr_data_in [2] $end
$var wire 1 p' io_wr_data_in [1] $end
$var wire 1 q' io_wr_data_in [0] $end
$var wire 1 r' io_wr_data_out [15] $end
$var wire 1 s' io_wr_data_out [14] $end
$var wire 1 t' io_wr_data_out [13] $end
$var wire 1 u' io_wr_data_out [12] $end
$var wire 1 v' io_wr_data_out [11] $end
$var wire 1 w' io_wr_data_out [10] $end
$var wire 1 x' io_wr_data_out [9] $end
$var wire 1 y' io_wr_data_out [8] $end
$var wire 1 z' io_wr_data_out [7] $end
$var wire 1 {' io_wr_data_out [6] $end
$var wire 1 |' io_wr_data_out [5] $end
$var wire 1 }' io_wr_data_out [4] $end
$var wire 1 ~' io_wr_data_out [3] $end
$var wire 1 !( io_wr_data_out [2] $end
$var wire 1 "( io_wr_data_out [1] $end
$var wire 1 #( io_wr_data_out [0] $end
$var wire 32 $( delay $end
$var wire 32 %( byte_count $end
$var wire 32 &( page_idx $end
$var wire 32 '( data_bytes_per_page $end
$var wire 32 (( oob_bytes_per_page $end
$var wire 32 )( addr_cycles $end
$var wire 1 *( status [7] $end
$var wire 1 +( status [6] $end
$var wire 1 ,( status [5] $end
$var wire 1 -( status [4] $end
$var wire 1 .( status [3] $end
$var wire 1 /( status [2] $end
$var wire 1 0( status [1] $end
$var wire 1 1( status [0] $end

$scope module ACL $end
$var wire 1 4% clk $end
$var wire 1 R& activate $end
$var wire 1 V& data_in [15] $end
$var wire 1 W& data_in [14] $end
$var wire 1 X& data_in [13] $end
$var wire 1 Y& data_in [12] $end
$var wire 1 Z& data_in [11] $end
$var wire 1 [& data_in [10] $end
$var wire 1 \& data_in [9] $end
$var wire 1 ]& data_in [8] $end
$var wire 1 ^& data_in [7] $end
$var wire 1 _& data_in [6] $end
$var wire 1 `& data_in [5] $end
$var wire 1 a& data_in [4] $end
$var wire 1 b& data_in [3] $end
$var wire 1 c& data_in [2] $end
$var wire 1 d& data_in [1] $end
$var wire 1 e& data_in [0] $end
$var wire 1 S& latch_ctrl $end
$var wire 1 T& write_enable $end
$var wire 1 U& busy $end
$var wire 1 f& data_out [15] $end
$var wire 1 g& data_out [14] $end
$var wire 1 h& data_out [13] $end
$var wire 1 i& data_out [12] $end
$var wire 1 j& data_out [11] $end
$var wire 1 k& data_out [10] $end
$var wire 1 l& data_out [9] $end
$var wire 1 m& data_out [8] $end
$var wire 1 n& data_out [7] $end
$var wire 1 o& data_out [6] $end
$var wire 1 p& data_out [5] $end
$var wire 1 q& data_out [4] $end
$var wire 1 r& data_out [3] $end
$var wire 1 s& data_out [2] $end
$var wire 1 t& data_out [1] $end
$var wire 1 u& data_out [0] $end
$var wire 32 2( delay $end
$upscope $end

$scope module AAL $end
$var wire 1 4% clk $end
$var wire 1 v& activate $end
$var wire 1 z& data_in [15] $end
$var wire 1 {& data_in [14] $end
$var wire 1 |& data_in [13] $end
$var wire 1 }& data_in [12] $end
$var wire 1 ~& data_in [11] $end
$var wire 1 !' data_in [10] $end
$var wire 1 "' data_in [9] $end
$var wire 1 #' data_in [8] $end
$var wire 1 $' data_in [7] $end
$var wire 1 %' data_in [6] $end
$var wire 1 &' data_in [5] $end
$var wire 1 '' data_in [4] $end
$var wire 1 (' data_in [3] $end
$var wire 1 )' data_in [2] $end
$var wire 1 *' data_in [1] $end
$var wire 1 +' data_in [0] $end
$var wire 1 w& latch_ctrl $end
$var wire 1 x& write_enable $end
$var wire 1 y& busy $end
$var wire 1 ,' data_out [15] $end
$var wire 1 -' data_out [14] $end
$var wire 1 .' data_out [13] $end
$var wire 1 /' data_out [12] $end
$var wire 1 0' data_out [11] $end
$var wire 1 1' data_out [10] $end
$var wire 1 2' data_out [9] $end
$var wire 1 3' data_out [8] $end
$var wire 1 4' data_out [7] $end
$var wire 1 5' data_out [6] $end
$var wire 1 6' data_out [5] $end
$var wire 1 7' data_out [4] $end
$var wire 1 8' data_out [3] $end
$var wire 1 9' data_out [2] $end
$var wire 1 :' data_out [1] $end
$var wire 1 ;' data_out [0] $end
$var wire 32 3( delay $end
$upscope $end

$scope module IO_WR $end
$var wire 1 4% clk $end
$var wire 1 _' activate $end
$var wire 1 b' data_in [15] $end
$var wire 1 c' data_in [14] $end
$var wire 1 d' data_in [13] $end
$var wire 1 e' data_in [12] $end
$var wire 1 f' data_in [11] $end
$var wire 1 g' data_in [10] $end
$var wire 1 h' data_in [9] $end
$var wire 1 i' data_in [8] $end
$var wire 1 j' data_in [7] $end
$var wire 1 k' data_in [6] $end
$var wire 1 l' data_in [5] $end
$var wire 1 m' data_in [4] $end
$var wire 1 n' data_in [3] $end
$var wire 1 o' data_in [2] $end
$var wire 1 p' data_in [1] $end
$var wire 1 q' data_in [0] $end
$var wire 1 `' io_ctrl $end
$var wire 1 r' data_out [15] $end
$var wire 1 s' data_out [14] $end
$var wire 1 t' data_out [13] $end
$var wire 1 u' data_out [12] $end
$var wire 1 v' data_out [11] $end
$var wire 1 w' data_out [10] $end
$var wire 1 x' data_out [9] $end
$var wire 1 y' data_out [8] $end
$var wire 1 z' data_out [7] $end
$var wire 1 {' data_out [6] $end
$var wire 1 |' data_out [5] $end
$var wire 1 }' data_out [4] $end
$var wire 1 ~' data_out [3] $end
$var wire 1 !( data_out [2] $end
$var wire 1 "( data_out [1] $end
$var wire 1 #( data_out [0] $end
$var wire 1 a' busy $end
$var wire 32 4( delay $end
$var wire 1 5( data_reg [15] $end
$var wire 1 6( data_reg [14] $end
$var wire 1 7( data_reg [13] $end
$var wire 1 8( data_reg [12] $end
$var wire 1 9( data_reg [11] $end
$var wire 1 :( data_reg [10] $end
$var wire 1 ;( data_reg [9] $end
$var wire 1 <( data_reg [8] $end
$var wire 1 =( data_reg [7] $end
$var wire 1 >( data_reg [6] $end
$var wire 1 ?( data_reg [5] $end
$var wire 1 @( data_reg [4] $end
$var wire 1 A( data_reg [3] $end
$var wire 1 B( data_reg [2] $end
$var wire 1 C( data_reg [1] $end
$var wire 1 D( data_reg [0] $end
$upscope $end

$scope module IO_RD $end
$var wire 1 4% clk $end
$var wire 1 <' activate $end
$var wire 1 ?' data_in [15] $end
$var wire 1 @' data_in [14] $end
$var wire 1 A' data_in [13] $end
$var wire 1 B' data_in [12] $end
$var wire 1 C' data_in [11] $end
$var wire 1 D' data_in [10] $end
$var wire 1 E' data_in [9] $end
$var wire 1 F' data_in [8] $end
$var wire 1 G' data_in [7] $end
$var wire 1 H' data_in [6] $end
$var wire 1 I' data_in [5] $end
$var wire 1 J' data_in [4] $end
$var wire 1 K' data_in [3] $end
$var wire 1 L' data_in [2] $end
$var wire 1 M' data_in [1] $end
$var wire 1 N' data_in [0] $end
$var wire 1 =' io_ctrl $end
$var wire 1 O' data_out [15] $end
$var wire 1 P' data_out [14] $end
$var wire 1 Q' data_out [13] $end
$var wire 1 R' data_out [12] $end
$var wire 1 S' data_out [11] $end
$var wire 1 T' data_out [10] $end
$var wire 1 U' data_out [9] $end
$var wire 1 V' data_out [8] $end
$var wire 1 W' data_out [7] $end
$var wire 1 X' data_out [6] $end
$var wire 1 Y' data_out [5] $end
$var wire 1 Z' data_out [4] $end
$var wire 1 [' data_out [3] $end
$var wire 1 \' data_out [2] $end
$var wire 1 ]' data_out [1] $end
$var wire 1 ^' data_out [0] $end
$var wire 1 >' busy $end
$var wire 32 E( delay $end
$var wire 1 F( data_reg [15] $end
$var wire 1 G( data_reg [14] $end
$var wire 1 H( data_reg [13] $end
$var wire 1 I( data_reg [12] $end
$var wire 1 J( data_reg [11] $end
$var wire 1 K( data_reg [10] $end
$var wire 1 L( data_reg [9] $end
$var wire 1 M( data_reg [8] $end
$var wire 1 N( data_reg [7] $end
$var wire 1 O( data_reg [6] $end
$var wire 1 P( data_reg [5] $end
$var wire 1 Q( data_reg [4] $end
$var wire 1 R( data_reg [3] $end
$var wire 1 S( data_reg [2] $end
$var wire 1 T( data_reg [1] $end
$var wire 1 U( data_reg [0] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end

$scope begin std $end
$upscope $end

$scope begin standard $end
$upscope $end

$scope begin textio $end
$upscope $end

$scope begin std_logic_1164 $end
$upscope $end

$scope begin numeric_std $end
$upscope $end

$scope begin onfi $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
0w#
xx#
xy#
xz#
x{#
x|#
bx }#
bx ~#
bx !$
bx "$
xm$
0n$
0o$
b0 p$
b0 q$
x#$
bx $$
bx %$
0!
z"
z#
z$
z%
z&
z'
z(
z)
z*
z+
z,
z-
z.
z;
z:
z9
z8
z7
z6
z5
z4
z3
z2
z1
z0
z/
z=
z<
z>
z?
z@
zA
zQ
zP
zO
zN
zM
zL
zK
zJ
zI
zH
zG
zF
zE
zD
zC
zB
zR
zS
zT
zU
zV
zW
z_
z^
z]
z\
z[
zZ
zY
zX
0`
1a
0b
0c
1d
1e
zf
z{
zz
zy
zx
zw
zv
zu
zt
zs
zr
zq
zp
zo
zn
zm
zl
zk
zj
zi
zh
zg
zA!
z@!
z?!
z>!
z=!
z<!
z;!
z:!
z9!
z8!
z7!
z6!
z5!
z4!
z3!
z2!
z1!
z0!
z/!
z.!
z-!
z,!
z+!
z*!
z)!
z(!
z'!
z&!
z%!
z$!
z#!
z"!
z!!
z~
z}
z|
xH!
xG!
xF!
xE!
xD!
xC!
xB!
xO!
xN!
xM!
xL!
xK!
xJ!
xI!
xV!
xU!
xT!
xS!
xR!
xQ!
xP!
x]!
x\!
x[!
xZ!
xY!
xX!
xW!
xd!
xc!
xb!
xa!
x`!
x_!
x^!
xk!
xj!
xi!
xh!
xg!
xf!
xe!
zl!
zm!
zq!
zp!
zo!
zn!
z{!
zz!
zy!
zx!
zw!
zv!
zu!
zt!
zs!
zr!
z|!
z}!
z~!
z!"
z+"
z*"
z)"
z("
z'"
z&"
z%"
z$"
z#"
z""
z,"
z4"
z3"
z2"
z1"
z0"
z/"
z."
z-"
z5"
z6"
z7"
z?"
z>"
z="
z<"
z;"
z:"
z9"
z8"
z@"
zA"
zI"
zH"
zG"
zF"
zE"
zD"
zC"
zB"
zJ"
zR"
zQ"
zP"
zO"
zN"
zM"
zL"
zK"
zS"
zT"
zc"
zb"
za"
z`"
z_"
z^"
z]"
z\"
z["
zZ"
zY"
zX"
zW"
zV"
zU"
zf"
ze"
zd"
zg"
zh"
zi"
zj"
zk"
zo"
zn"
zm"
zl"
z1#
z0#
z/#
z.#
z-#
z,#
z+#
z*#
z)#
z(#
z'#
z&#
z%#
z$#
z##
z"#
z!#
z~"
z}"
z|"
z{"
zz"
zy"
zx"
zw"
zv"
zu"
zt"
zs"
zr"
zq"
zp"
z5#
z4#
z3#
z2#
z9#
z8#
z7#
z6#
z:#
z;#
z<#
z=#
z>#
z?#
z@#
zA#
zB#
zC#
zG#
zF#
zE#
zD#
zH#
zL#
zK#
zJ#
zI#
zM#
zQ#
zP#
zO#
zN#
zR#
zS#
zT#
zV#
zU#
zW#
zX#
zY#
zZ#
z[#
z\#
z]#
z^#
z_#
zc#
zb#
za#
z`#
zd#
ze#
zf#
zg#
zh#
zi#
zj#
zk#
zs#
zr#
zq#
zp#
zo#
zn#
zm#
zl#
zt#
zu#
zv#
zE$
zD$
zC$
zB$
zA$
z@$
z?$
z>$
z=$
z<$
z;$
z:$
z9$
z8$
z7$
z6$
z5$
z4$
z3$
z2$
z1$
z0$
z/$
z.$
z-$
z,$
z+$
z*$
z)$
z($
z'$
z&$
zU$
zT$
zS$
zR$
zQ$
zP$
zO$
zN$
zM$
zL$
zK$
zJ$
zI$
zH$
zG$
zF$
z]$
z\$
z[$
zZ$
zY$
zX$
zW$
zV$
zl$
zk$
zj$
zi$
zh$
zg$
zf$
ze$
zd$
zc$
zb$
za$
z`$
z_$
z^$
x3%
x2%
x1%
x0%
x/%
x.%
x-%
x,%
x+%
x*%
x)%
x(%
x'%
x&%
x%%
x$%
x#%
x"%
x!%
x~$
x}$
x|$
x{$
xz$
xy$
xx$
xw$
xv$
xu$
xt$
xs$
xr$
x5(
x6(
x7(
x8(
x9(
x:(
x;(
x<(
x=(
x>(
x?(
x@(
xA(
xB(
xC(
xD(
xF(
xG(
xH(
xI(
xJ(
xK(
xL(
xM(
xN(
xO(
xP(
xQ(
xR(
xS(
xT(
xU(
04%
x5%
0v%
0w%
0z%
0{%
1|%
0}%
1~%
1!&
z"&
x3&
1D&
0E&
xN&
0Q&
0R&
0S&
1T&
0U&
0v&
0w&
1x&
0y&
0<'
1='
0>'
0_'
1`'
0a'
x6%
x7%
x8%
x9%
x:%
x;%
x<%
x=%
x>%
x?%
x@%
xA%
xB%
xC%
xD%
xE%
xF%
xG%
xH%
xI%
xJ%
xK%
xL%
xM%
xN%
xO%
xP%
xQ%
xR%
xS%
xT%
xU%
0V%
0W%
0X%
0Y%
0Z%
0[%
0\%
0]%
0^%
0_%
0`%
0a%
0b%
0c%
0d%
0e%
0f%
0g%
0h%
0i%
0j%
0k%
0l%
0m%
0n%
0o%
0p%
0q%
0r%
0s%
0t%
0u%
0x%
0y%
z#&
z$&
z%&
z&&
z'&
z(&
z)&
z*&
z+&
z,&
z-&
z.&
z/&
z0&
z1&
z2&
xz&
x{&
x|&
x}&
x~&
x!'
x"'
x#'
x$'
x%'
x&'
x''
x('
x)'
x*'
x+'
xb'
xc'
xd'
xe'
xf'
xg'
xh'
xi'
xj'
xk'
xl'
xm'
xn'
xo'
xp'
xq'
0*(
0+(
0,(
0-(
0.(
0/(
00(
01(
x4&
x5&
x6&
x7&
x8&
x9&
x:&
x;&
x<&
x=&
x>&
x?&
x@&
xA&
xB&
xC&
xF&
xG&
xH&
xI&
xJ&
xK&
xL&
xM&
xO&
xP&
xV&
xW&
xX&
xY&
xZ&
x[&
x\&
x]&
x^&
x_&
x`&
xa&
xb&
xc&
xd&
xe&
0f&
0g&
0h&
0i&
0j&
0k&
0l&
0m&
0n&
0o&
0p&
0q&
0r&
0s&
0t&
0u&
0,'
0-'
0.'
0/'
00'
01'
02'
03'
04'
05'
06'
07'
08'
09'
0:'
0;'
z?'
z@'
zA'
zB'
zC'
zD'
zE'
zF'
zG'
zH'
zI'
zJ'
zK'
zL'
zM'
zN'
xO'
xP'
xQ'
xR'
xS'
xT'
xU'
xV'
xW'
xX'
xY'
xZ'
x['
x\'
x]'
x^'
0r'
0s'
0t'
0u'
0v'
0w'
0x'
0y'
0z'
0{'
0|'
0}'
0~'
0!(
0"(
0#(
b0 $(
b0 %(
b0 &(
b10000000000000000000000000000000 '(
b10000000000000000000000000000000 ((
b10000000000000000000000000000000 )(
b0 2(
b0 3(
b0 4(
b0 E(
$end
#1000
0#$
0x#
0m$
05%
#10000
1w#
1!
14%
0N&
0P&
0O&
0C&
0B&
0A&
0@&
0?&
0>&
0=&
0<&
#15000
0w#
0!
04%
#20000
1w#
1!
14%
1x#
1m$
15%
#25000
0w#
0!
04%
#30000
1w#
1!
14%
b10 $$
b1 p$
1o$
b10 q$
1.(
b0 )(
b0 ((
b0 '(
1w%
1t%
1y%
0D&
0U%
03%
0T%
02%
0S%
01%
0R%
00%
0Q%
0/%
0P%
0.%
0O%
0-%
0N%
0,%
bx00000000 "$
#35000
0w#
0!
04%
#40000
1w#
1!
14%
0o$
1N&
1P&
0w%
#45000
0w#
0!
04%
#50000
1w#
1!
14%
0N&
0M&
1L&
0K&
0J&
0I&
0H&
0G&
0F&
#55000
0w#
0!
04%
#60000
1w#
1!
14%
#65000
0w#
0!
04%
#70000
1w#
1!
14%
#75000
0w#
0!
04%
#80000
1w#
1!
14%
#85000
0w#
0!
04%
#90000
1w#
1!
14%
#95000
0w#
0!
04%
#100000
1w#
1!
14%
#105000
0w#
0!
04%
#110000
1w#
1!
14%
#115000
0w#
0!
04%
#120000
1w#
1!
14%
#125000
0w#
0!
04%
#130000
1w#
1!
14%
#135000
0w#
0!
04%
#140000
1w#
1!
14%
#145000
0w#
0!
04%
#150000
1w#
1!
14%
#155000
0w#
0!
04%
#160000
1w#
1!
14%
#165000
0w#
0!
04%
#170000
1w#
1!
14%
#175000
0w#
0!
04%
#180000
1w#
1!
14%
#185000
0w#
0!
04%
#190000
1w#
1!
14%
#195000
0w#
0!
04%
#200000
1w#
1!
14%
#205000
0w#
0!
04%
#210000
1w#
1!
14%
#215000
0w#
0!
04%
#220000
1w#
1!
14%
#225000
0w#
0!
04%
#230000
1w#
1!
14%
#235000
0w#
0!
04%
#240000
1w#
1!
14%
